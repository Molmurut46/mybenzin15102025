name: CI


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      website_url:
        description: "URL вашего сайта (для TWA/Bubblewrap)"
        required: false
        default: "https://mybenzin15102025.vercel.app"


jobs:
  web-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'


      - name: Install dependencies
        run: npm install --legacy-peer-deps


      - name: Build Next.js app
        run: npm run build


      - name: Run tests
        run: echo "Tests would run here"


  android-apk:
    runs-on: ubuntu-latest
    needs: web-ci

    steps:
      - uses: actions/checkout@v4

      # Java + Android SDK
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Setup Node.js для Bubblewrap
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Bubblewrap CLI
        run: npm i -g @bubblewrap/cli

      # Создаем TWA проект
      - name: Generate TWA project
        env:
          WEBSITE_URL: ${{ github.event.inputs.website_url || 'https://mybenzin15102025.vercel.app' }}
        run: |
          echo "Using WEBSITE_URL=$WEBSITE_URL"
          
          # Создаем рабочую директорию
          mkdir -p twa-project
          cd twa-project

      - name: Initialize Bubblewrap project
        working-directory: twa-project
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
          WEBSITE_URL: ${{ github.event.inputs.website_url || 'https://mybenzin15102025.vercel.app' }}
        run: |
          # Автоматически отвечаем на вопросы bubblewrap init
          # URL, packageId, appName, launcherName, JDK install (n)
          echo "Initializing Bubblewrap project..."
          printf "$WEBSITE_URL\ncom.mybenzin.app\nMybenzin\nMybenzin\nn\n" | bubblewrap init --directory=. || true
          
          # Проверяем, создался ли gradlew
          if [ ! -f "gradlew" ]; then
            echo "ERROR: Bubblewrap init failed to create Android project"
            echo "Trying alternative approach..."
            
            # Пробуем с явным указанием manifest URL
            printf "$WEBSITE_URL/manifest.json\ncom.mybenzin.app\nMybenzin\nMybenzin\nn\n" | bubblewrap init --directory=. || true
          fi
          
          # Финальная проверка
          if [ -f "gradlew" ]; then
            echo "✓ Bubblewrap project created successfully"
            ls -la
          else
            echo "✗ Failed to create Bubblewrap project"
            echo "Directory contents:"
            ls -la
            exit 1
          fi

      - name: Build TWA debug APK
        working-directory: twa-project
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17_X64 }}
        run: |
          echo "Building debug APK..."
          
          # Даем права на выполнение gradlew
          chmod +x ./gradlew
          
          # Собираем debug APK
          ./gradlew assembleDebug --stacktrace

      - name: List build outputs
        run: |
          echo "=== Listing all APK files ==="
          find . -name "*.apk" -type f || echo "No APK files found"
          
          echo ""
          echo "=== Listing build outputs directory ==="
          ls -laR twa-project/app/build/outputs/ || echo "Build outputs directory not found"

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mybenzin-android-debug-apk
          path: |
            twa-project/app/build/outputs/apk/debug/*.apk
            twa-project/app/build/outputs/apk/**/*.apk
          if-no-files-found: error
