name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      website_url:
        description: "URL вашего сайта (для TWA/Bubblewrap)"
        required: false
        default: "https://example.com"

jobs:
  web-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build Next.js app
        run: npm run build

      - name: Run tests
        run: echo "Tests would run here"

  android-apk:
    runs-on: ubuntu-latest
    needs: web-ci

    steps:
      - uses: actions/checkout@v4

      # Java + Android SDK
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Setup Node.js для Bubblewrap
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Bubblewrap CLI
        run: npm i -g @bubblewrap/cli

      # Создаем TWA проект
      - name: Generate TWA project
        env:
          WEBSITE_URL: ${{ github.event.inputs.website_url || 'https://example.com' }}
        run: |
          echo "Using WEBSITE_URL=$WEBSITE_URL"
          
          # Создаем минимальный twa.manifest.json
          mkdir -p twa-project
          cat > twa-project/twa-manifest.json <<EOF
          {
            "packageId": "com.mybenzin.twa",
            "host": "$WEBSITE_URL",
            "name": "MyBenzin",
            "launcherName": "MyBenzin",
            "display": "standalone",
            "themeColor": "#FFFFFF",
            "navigationColor": "#000000",
            "backgroundColor": "#FFFFFF",
            "enableNotifications": false,
            "startUrl": "/",
            "iconUrl": "$WEBSITE_URL/icon.png",
            "maskableIconUrl": "$WEBSITE_URL/icon.png",
            "splashScreenFadeOutDuration": 300,
            "signingKey": {
              "path": "./android.keystore",
              "alias": "android"
            },
            "appVersionName": "1.0.0",
            "appVersionCode": 1,
            "shortcuts": [],
            "generatorApp": "bubblewrap-cli",
            "webManifestUrl": "$WEBSITE_URL/manifest.json",
            "fallbackType": "customtabs",
            "features": {},
            "alphaDependencies": {
              "enabled": false
            },
            "enableSiteSettingsShortcut": true,
            "isChromeOSOnly": false,
            "isMetaQuest": false
          }
          EOF

      - name: Initialize Bubblewrap project
        working-directory: twa-project
        run: |
          # Инициализируем проект из манифеста
          bubblewrap init --manifest=./twa-manifest.json || true

      - name: Build TWA debug APK
        working-directory: twa-project
        run: |
          # Собираем debug APK (не требует подписи)
          bubblewrap build --skipPwaValidation || true
          
          # Если bubblewrap build не сработал, используем gradle напрямую
          if [ -f "./gradlew" ]; then
            chmod +x ./gradlew
            ./gradlew assembleDebug --stacktrace
          fi

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: |
            twa-project/app-release-signed.apk
            twa-project/app/build/outputs/apk/**/*.apk
          if-no-files-found: warn
